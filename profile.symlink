export EDITOR='code -w' # ssh?
export SVN_EDITOR=$EDITOR
export VISUAL=$EDITOR
# brew
export BREW_BIN="$HOME/homebrew/bin"
export BREW_SBIN="$HOME/homebrew/sbin"
# node
export NODE_PATH="/usr/local/lib/node:/usr/local/lib/node_modules"
export NODE_BIN="/usr/local/share/npm/bin"
# haskell
export HASKELL_BIN="$HOME/Library/Haskell/bin"
export STACK_BIN="$HOME/.local/bin"
export CABAL_BIN=~/.cabal/bin
# latex
export TEX_BIN="/Library/TeX/texbin"
# Heroku Toolbelt
export HEROKU_BIN="/usr/local/heroku/bin"
# php
export COMPOSER_BIN="~/.composer/vendor/bin"
# idea
export IDEA_BIN="/Applications/IntelliJ IDEA CE.app/Contents/MacOS"
# path
export PATH=$IDEA_BIN:$BREW_BIN:$BREW_SBIN:$NODE_BIN:$STACK_BIN:$CABAL_BIN:$HASKELL_BIN:$TEX_BIN:$HEROKU_BIN:$COMPOSER_BIN:$PATH
# java
# export JAVA_HOME=$(/usr/libexec/java_home)
eval "$(jenv init -)"
export JAVA_OPTS="$JAVA_OPTS -Xms512m -Xmx1024m -XX:MaxPermSize=256m"
export SBT_OPTS="-XX:MaxPermSize=256m"
# fix jslint
export JS_CMD=`which node`
# ruby performance
export RUBY_GC_HEAP_INIT_SLOTS=1000000
export RUBY_HEAP_FREE_MIN=500000
export RUBY_HEAP_SLOTS_INCREMENT=1000000
export RUBY_HEAP_SLOTS_GROWTH_FACTOR=1
export RUBY_GC_MALLOC_LIMIT=100000000

export ANDROID_HOME=/usr/local/opt/android-sdk

export HOMEBREW_CASK_OPTS="--appdir=/Applications"

# Python virtualenv/pipenv
export PIP_RESPECT_VIRTUALENV=true
#export PIP_REQUIRE_VIRTUALENV=true
export VIRTUAL_ENV_DISABLE_PROMPT=1
#export PIPENV_VENV_IN_PROJECT=1
export SYSTEM_VERSION_COMPAT=0

# direnv
eval "$(direnv hook zsh)"

# Anaconda
export CONDA_BIN="/Users/danielkirsch/anaconda3/bin"
# export DYLD_FALLBACK_LIBRARY_PATH="/Users/danielkirsch/anaconda3/lib"
# path
alias ana="echo \"Activating anaconda\" && export PATH=$CONDA_BIN:$PATH"

export RSTUDIO_WHICH_R="$BREW_BIN/R"

# Pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if which pyenv > /dev/null;
  then
  eval "$(pyenv init --path)";
  function pyenv_prompt_info() {
      echo "$(pyenv version-name)"
  }
fi
#export CFLAGS="-I$(brew --prefix openssl)/include -I$(brew --prefix bzip2)/include -I$(brew --prefix readline)/include -I$(xcrun --show-sdk-path)/usr/include"
#export LDFLAGS="-L$(brew --prefix openssl)/lib -L$(brew --prefix readline)/lib -L$(brew --prefix zlib)/lib -L$(brew --prefix bzip2)/lib"

# rbenv
load_rbenv () {
  if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
  export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$($BREW_BIN/brew --prefix openssl@1.1)"
}

# nvm
load_nvm () {
    export NVM_DIR=~/.nvm
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
}

# git stuff
eval "$(hub alias -s)"

# fzf see zshrc

# aliases
[[ -a ~/.aliases ]] && source ~/.aliases

# z
[[ -f ~/homebrew/etc/profile.d/z.sh ]] && . ~/homebrew/etc/profile.d/z.sh

# secrets
[[ -a ~/.secrets.sh ]] && source ~/.secrets.sh

# Billie
[[ -a ~/.billie.sh ]] && source ~/.billie.sh
[[ -a ~/code/ds-aws/aws.sh ]] && source ~/code/ds-aws/aws.sh

export RPROMPT="\$(virtualenv_prompt_info) \$(pyenv_prompt_info) \$(rbenv_prompt_info)"

# ollama
export OLLAMA_HOST="http://um:11434"